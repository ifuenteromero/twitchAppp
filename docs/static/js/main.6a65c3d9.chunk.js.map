{"version":3,"sources":["components/streams/StreamCreate.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","index.js"],"names":["StreamCreate","props","StreamDelete","StreamEdit","StreamList","StreamShow","GoogleAuth","useState","isSignedIn","setIsSignedIn","useEffect","window","gapi","load","client","init","clientId","scope","then","e","auth","auth2","getAuthInstance","onAuthChange","listen","onSignIn","signIn","onSignOut","signOut","className","onClick","Header","to","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"4NAQeA,EANM,SAACC,GAClB,OACI,+CCIOC,EANM,WACjB,OACI,+CCIOC,EANI,WACf,OACI,6CCIOC,EANI,SAACH,GAChB,OACI,6CCIOI,EANI,WACf,OACI,6C,QC2DOC,EA7DI,WAAM,MAEeC,mBAAS,MAFxB,mBAEdC,EAFc,KAEFC,EAFE,KAIrBC,qBAAU,WACNC,OAAOC,KAAKC,KAAK,gBAAgB,WAC7BF,OAAOC,KAAKE,OAAOC,KAAK,CACpBC,SAAW,2EACXC,MAAO,UACRC,MAAK,SAACC,GACL,IAAMC,EAAOT,OAAOC,KAAKS,MAAMC,kBAE/BC,IACAH,EAAKZ,WAAWgB,OAAOD,WAGjC,IAEF,IAAMA,EAAe,SAACJ,GAClBV,EAAcU,IAIZM,EAAW,WACbd,OAAOC,KAAKS,MAAMC,kBAAkBI,UAGlCC,EAAY,WACdhB,OAAOC,KAAKS,MAAMC,kBAAkBM,WA4BxC,OACI,kCAzBiB,OAAbpB,EACO,KAEAA,EAEH,4BAAQqB,UAAU,uBAAuBC,QAASH,GAC9C,uBAAGE,UAAU,gBADjB,YAQJ,4BAAQA,UAAU,uBAAuBC,QAASL,GAC9C,uBAAGI,UAAU,gBADjB,yBC3BGE,EAhBA,WACX,OACI,yBAAKF,UAAU,8BACX,kBAAC,IAAD,CAAMG,GAAI,IAAIH,UAAU,QAAxB,WAGA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,QAAvB,eAGA,kBAAC,EAAD,SCaDI,EAlBH,WACR,OACI,yBAAKJ,UAAU,gBACX,kBAAC,IAAD,KAGI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOK,KAAK,IAAIC,OAAK,EAACC,UAAWhC,IACjC,kBAAC,IAAD,CAAO8B,KAAK,eAAeE,UAAWpC,IACtC,kBAAC,IAAD,CAAOkC,KAAK,gBAAgBE,UAAWjC,IACvC,kBAAC,IAAD,CAAO+B,KAAK,kBAAkBE,UAAWlC,IACzC,kBAAC,IAAD,CAAOgC,KAAK,gBAAgBE,UAAW/B,IACvC,kBAAC,IAAD,CAAO6B,KAAK,kBAAkBE,UAAWpC,OChBzDqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6a65c3d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst StreamCreate = (props) => {\r\n    return ( \r\n        <div> StreamCreate</div>\r\n    );\r\n}\r\n \r\nexport default StreamCreate;","import React from 'react';\r\n\r\nconst StreamDelete = () => {\r\n    return ( \r\n        <div> StreamDelete</div>\r\n    );\r\n}\r\n \r\nexport default StreamDelete;","import React from 'react';\r\n\r\nconst StreamEdit = () => {\r\n    return ( \r\n        <div> StreamEdit</div>\r\n    );\r\n}\r\n \r\nexport default StreamEdit;","import React from 'react';\r\n\r\nconst StreamList = (props) => {\r\n    return ( \r\n        <div> StreamList</div>\r\n    );\r\n}\r\n \r\nexport default StreamList;","import React from 'react';\r\n\r\nconst StreamShow = () => {\r\n    return ( \r\n        <div> StreamShow</div>\r\n    );\r\n}\r\n \r\nexport default StreamShow;","import React, {useEffect, useState } from 'react';\r\n\r\nconst GoogleAuth = () => {\r\n    //En la consola para hacer sign in gapi.auth2.getAtuthInstance().signIn() y signOut\r\n    const [isSignedIn, setIsSignedIn] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId : '585727853238-jp3ct0vt9lli5okgqlrbutnh073ei03e.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then((e) => {\r\n                const auth = window.gapi.auth2.getAuthInstance();\r\n                //setIsSignedIn(auth.isSignedIn.get());\r\n                onAuthChange()\r\n                auth.isSignedIn.listen(onAuthChange);\r\n            });\r\n        });\r\n    },[]);\r\n\r\n    const onAuthChange = (e) => {\r\n        setIsSignedIn(e)\r\n       // setIsSignedIn(auth.isSignedIn.get())\r\n    }\r\n\r\n    const onSignIn = () => {\r\n        window.gapi.auth2.getAuthInstance().signIn();\r\n    };\r\n\r\n    const onSignOut = () => {\r\n        window.gapi.auth2.getAuthInstance().signOut();\r\n    }\r\n\r\n    const renderAuthButton = () => {\r\n        if (isSignedIn===null){\r\n            return null\r\n            //<div> I don't know if we are signed in</div>\r\n        } else if (isSignedIn) {\r\n            return (\r\n                <button className=\"ui red google button\" onClick={onSignOut}>\r\n                    <i className=\"google icon\" />\r\n                    Sign Out\r\n                </button>\r\n                //<div> I am sign in </div>\r\n            );\r\n        } else {\r\n            return  ( \r\n            <button className=\"ui red google button\" onClick={onSignIn}>\r\n                <i className=\"google icon\" />\r\n                Sign In with Google\r\n            </button>\r\n        )\r\n                //<div> i am not sign in</div>\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    return ( \r\n        <div>  {renderAuthButton()}</div>\r\n     );\r\n}\r\n \r\nexport default GoogleAuth;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to =\"/\" className=\"item\" >\r\n                Streamy\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All streams\r\n                </Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Header;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport StreamCreate from './streams/StreamCreate';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './Header';\n\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <BrowserRouter \n            // basename=\"/twitchAppp/\" forceRefresh={true}\n            >\n                <Header />  \n                <Route path=\"/\" exact component={StreamList}/>\n                <Route path=\"/streams/new\" component={StreamCreate} />\n                <Route path=\"/streams/edit\" component={StreamEdit} />\n                <Route path=\"/streams/delete\" component={StreamDelete} />\n                <Route path=\"/streams/show\" component={StreamShow} />\n                <Route path=\"/streams/create\" component={StreamCreate} />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}